import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.C4nOkCZI.js";const c=JSON.parse('{"title":"Systems Landscape","description":"","frontmatter":{},"headers":[],"relativePath":"guide/landscape.md","filePath":"guide/landscape.md"}'),t={name:"guide/landscape.md"};function l(p,s,r,h,o,d){return e(),i("div",null,[...s[0]||(s[0]=[n(`<h1 id="systems-landscape" tabindex="-1">Systems Landscape <a class="header-anchor" href="#systems-landscape" aria-label="Permalink to &quot;Systems Landscape&quot;">​</a></h1><p>LaravelUi5 adopts a clean, configurable systems architecture designed to reflect transport chains familiar from enterprise software environments — DEV, QS, and PRO.</p><p>This approach is more than just convention. It provides the foundation for a dynamic middleware stack, secure API boundaries, and, when extended, a transport-driven deployment pipeline.</p><h2 id="environment-configuration" tabindex="-1">Environment Configuration <a class="header-anchor" href="#environment-configuration" aria-label="Permalink to &quot;Environment Configuration&quot;">​</a></h2><p>In <code>config/ui5.php</code>, you define your system landscape via the <code>systems</code> array:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;systems&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;DEV&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;middleware&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;QS&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;middleware&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auth.odata&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;PRO&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;middleware&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auth.odata&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><p>The currently active system is controlled via your <code>.env</code> file:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">SYSTEM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DEV</span></span></code></pre></div><h2 id="what-this-enables" tabindex="-1">What This Enables <a class="header-anchor" href="#what-this-enables" aria-label="Permalink to &quot;What This Enables&quot;">​</a></h2><ul><li>Environment-specific middleware: Easily toggle authentication or runtime behavior depending on system stage.</li><li>Modular OData exposure: Use the same codebase across multiple contexts with isolated behavior.</li><li>Zero route hacking: No need to adjust route groups or middleware stacks manually — it’s fully driven by environment.</li></ul><p>In this way, LaravelUi5 aligns with the separation of environments common in enterprise delivery chains, while staying simple and developer-friendly.</p><h2 id="from-systems-to-transports" tabindex="-1">From Systems to Transports <a class="header-anchor" href="#from-systems-to-transports" aria-label="Permalink to &quot;From Systems to Transports&quot;">​</a></h2><p>While the <code>SYSTEM</code> config primarily manages middleware today, it also opens the door to <strong>transport-style workflows</strong>, inspired by SAP landscapes.</p><p>If you&#39;re planning to move data or UI artifacts between DEV, QS, and PRO stages in a repeatable way, this setup provides the groundwork.</p><p>Curious about how to evolve this into a full Transport Management System (<strong>TMS</strong>)? Check out our free guide at <a href="https://pragmatiqu.io/tms" target="_blank" rel="noreferrer">pragmatiqu.io/tms</a> — it outlines how to</p><ul><li>Safely move application data between environments.</li><li>Track artifact versions.</li><li>Align database state with code deployments.</li></ul><h3 id="what-s-next" tabindex="-1">What’s Next <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What’s Next&quot;">​</a></h3><p>LaravelUi5 keeps things lightweight by default, but designed for scale. If you&#39;re building multi-tenant SaaS apps, modular internal tooling, or version-controlled UI modules, this is where clean systems separation pays off.</p>`,18)])])}const g=a(t,[["render",l]]);export{c as __pageData,g as default};
