import{_ as i,c as a,o,ag as t}from"./chunks/framework.C4nOkCZI.js";const m=JSON.parse('{"title":"Community","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/community.md","filePath":"guide/community.md"}'),r={name:"guide/community.md"};function l(n,e,s,c,d,u){return o(),a("div",null,[...e[0]||(e[0]=[t('<h1 id="community" tabindex="-1">Community <a class="header-anchor" href="#community" aria-label="Permalink to &quot;Community&quot;">​</a></h1><p>LaravelUi5 is actively developed with real-world use cases in mind. While there is no public forum yet, you’re welcome to <a href="https://github.com/pragmatiqu/laravel-ui5-core/issues" target="_blank" rel="noreferrer">open an issue</a> for bugs, feature requests, or questions.</p><p>We’re currently evaluating the best place for community discussions. Stay tuned!</p><p><strong>Want to stay in the loop?</strong></p><p>Subscribe to the <a href="https://pragmatiqu.io/openui5-into-the-wild/" target="_blank" rel="noreferrer">LaravelUi5 newsletter</a> to receive updates, early previews, tips, and learning resources directly in your inbox.</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>This package is open-sourced software licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noreferrer">ASF 2.0</a>.</p><h2 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h2><p>Contributions are welcome and appreciated!</p><p>If you’d like to submit a bugfix, improve the documentation, or suggest an enhancement:</p><ol><li>Fork the repo</li><li>Create your feature branch (<code>git checkout -b feature/your-feature</code>)</li><li>Commit your changes (<code>git commit -am &#39;Add your feature&#39;</code>)</li><li>Push to the branch (<code>git push origin feature/your-feature</code>)</li><li>Open a Pull Request</li></ol><p>Please make sure to follow PSR-12 and existing architectural conventions. We also recommend discussing larger ideas via an issue before submitting a PR.</p><h2 id="roadmap" tabindex="-1">Roadmap <a class="header-anchor" href="#roadmap" aria-label="Permalink to &quot;Roadmap&quot;">​</a></h2><p>The LaravelUi5 project follows a staged release plan:</p><p><strong>Done</strong></p><ul><li>[x] Modular UI5 Artifact System <ul><li>[x] <code>Ui5App</code> (standalone apps)</li><li>[x] <code>Ui5Library</code> (component libraries)</li><li>[x] <code>Ui5Card</code>, <code>Ui5Tile</code>, <code>Ui5Kpi</code> (reusable UI blocks)</li><li>[x] <code>Ui5Report</code> (data-driven outputs with export)</li><li>[x] <code>Ui5Action</code> (API-triggered operations)</li><li>[x] <code>Ui5Dashboard</code> (composable UI containers)</li></ul></li><li>[x] Unified Registry System (<code>Ui5Registry</code>) <ul><li>[x] Runtime resolution of artifacts and modules by slug or namespace</li><li>[x] Manifest-aware integration of all registered components</li><li>[x] Cached mode for high-performance production use</li></ul></li><li>[x] Metadata &amp; Introspection <ul><li>[x] <code>php artisan ui5:sync</code> to store artifact metadata in DB</li><li>[x] Consistent handling of <code>title</code>, <code>description</code>, <code>namespace</code>, <code>url_key</code>, and <code>version</code></li><li>[x] URL-safe slugs and unique namespaces enforced</li></ul></li><li>[x] CLI Scaffolding Suite <ul><li>[x] <code>ui5:app</code></li><li>[x] <code>ui5:library</code></li><li>[x] <code>ui5:card</code></li><li>[x] <code>ui5:tile</code></li><li>[ ] <code>ui5:kpi</code></li><li>[x] <code>ui5:report</code></li><li>[x] <code>ui5:dashboard</code></li><li>[x] <code>ui5:action</code></li><li>[x] All commands support namespaced generation, JS/PHP prefixing, and prefilled templates</li></ul></li><li>[x] Generic Laravel Routing Layer <ul><li>[x] Routes auto-resolve to artifacts via namespace/slug</li><li>[x] No manual controller or route declaration needed</li><li>[x] CSRF-safe API calls via <code>LaravelUi5.call(...)</code></li></ul></li><li>[x] Decide the Manifest property name used for Laravel backend properties, e.g. <code>laravel.ui5</code>.</li></ul><p><strong>Near-Term</strong></p><ul><li>[ ] Extensive tests. <ul><li>[ ] Unit tests for artifact classes.</li><li>[ ] Integration tests for registry, sync, and cache.</li><li>[ ] Snapshot tests for CLI scaffolding outputs.</li></ul></li><li>[ ] Video course covering all artifact types and wiring patterns.</li><li>[ ] Better error handling in registry access. <ul><li>[ ] Fail-fast helpers (<code>getOrFail()</code>, <code>resolveOrFail()</code>).</li><li>[ ] Typed exceptions for missing artifacts or misconfigured modules.</li></ul></li><li>[ ] Diagnostic commands. <ul><li>[ ] <code>ui5:validate</code>, validates all referenced artifacts are in the current deployment.</li><li>[ ] <code>ui5:list</code>, lists all configured artifacts.</li><li>[ ] <code>ui5:missing</code>, same as validate but only reports missing artifacts.</li><li>[ ] <code>ui5:help</code>, shows all available commands and some getting started</li></ul></li><li>[ ] Integration docs. Best practices for deployment, caching, and live updates.</li><li>[ ] Scaffold <code>README.md</code> for Apps and Libraries</li></ul><p><strong>Mid-Termn</strong></p><ul><li>[ ] Evaluate formalized artifact lifecycle hooks (<code>boot()</code>, <code>authorize()</code>, <code>configure()</code>, <code>hydrate()</code> – optional hooks per artifact type).</li><li>[ ] Review Artifact attributes &amp; reflection metadata. <ul><li>[ ] PHP attributes for type, visibility, permissions, etc.</li><li>[ ] Used for documentation, introspection, and admin rendering.</li></ul></li><li>[ ] Registry API endpoints. JSON introspection of artifacts for frontend UIs or dashboards.</li><li>[ ] Audit &amp; telemetry hooks. Hooks for usage tracking, runtime diagnostics, lifecycle tracing.</li><li>[ ] Compatibility matrix with SAP BTP and CAP. Clear documentation where integration is feasible or intentionally decoupled.</li></ul><p>For feature requests or roadmap feedback, feel free to <a href="https://github.com/pragmatiqu/laravel-ui5-core/issues" target="_blank" rel="noreferrer">open an issue</a>.</p><h2 id="support" tabindex="-1">Support <a class="header-anchor" href="#support" aria-label="Permalink to &quot;Support&quot;">​</a></h2><p><strong>Community Support</strong></p><p>For questions or troubleshooting, please check existing issues or open a new one in the <a href="https://github.com/pragmatiqu/laravel-ui5-core/issues" target="_blank" rel="noreferrer">GitHub issue tracker</a>.</p><p><strong>Commercial Support</strong></p><p>Commercial support is available for teams building with LaravelUi5 — including architecture reviews, onboarding, and feature development.</p><p>Contact us at <a href="https://pragmatiqu.io" target="_blank" rel="noreferrer">pragmatiqu.io</a>.</p>',27)])])}const f=i(r,[["render",l]]);export{m as __pageData,f as default};
