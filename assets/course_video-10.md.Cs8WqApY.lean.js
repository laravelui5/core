import{_ as s,C as r,c as l,o as n,j as a,G as i,a as t}from"./chunks/framework.C4nOkCZI.js";const _=JSON.parse('{"title":"SAP & the Rest of Us","description":"","frontmatter":{},"headers":[],"relativePath":"course/video-10.md","filePath":"course/video-10.md"}'),c={name:"course/video-10.md"};function d(p,e,f,u,h,m){const o=r("Youtube");return n(),l("div",null,[e[0]||(e[0]=a("h1",{id:"sap-the-rest-of-us",tabindex:"-1"},[t("SAP & the Rest of Us "),a("a",{class:"header-anchor",href:"#sap-the-rest-of-us","aria-label":'Permalink to "SAP & the Rest of Us"'},"​")],-1)),e[1]||(e[1]=a("p",null,[t("This episode zooms out. We’ll look at how SAP uses OData for massive enterprise systems, why that’s overkill for Laravel projects, and how LaravelUi5 takes a pragmatic approach: OData for reads, actions for writes. You’ll see how Ui5Actions and the "),a("code",null,"LaravelUi5.call()"),t(" facade make full-stack interactions natural for Laravel developers.")],-1)),i(o,{id:"EtpcuLxhnfQ"})])}const k=s(c,[["render",d]]);export{_ as __pageData,k as default};
