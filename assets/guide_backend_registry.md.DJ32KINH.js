import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.C4nOkCZI.js";const k=JSON.parse('{"title":"Ui5Registry","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/backend/registry.md","filePath":"guide/backend/registry.md"}'),n={name:"guide/backend/registry.md"};function l(r,i,h,p,d,o){return e(),a("div",null,[...i[0]||(i[0]=[t(`<h1 id="ui5registry" tabindex="-1">Ui5Registry <a class="header-anchor" href="#ui5registry" aria-label="Permalink to &quot;Ui5Registry&quot;">​</a></h1><p>The <code>Ui5Registry</code> is the central runtime lookup system for resolving all UI5 modules and artifacts within the LaravelUi5 ecosystem. It powers routing, rendering, manifest generation, and backend integration for all registered UI5 entities.</p><p>LaravelUi5 uses a hybrid approach of <em>code-first registration</em>, <em>runtime caching</em>, and <em>database synchronization</em> to deliver fast and predictable artifact resolution across environments.</p><h2 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h2><p>The <code>Ui5Registry</code> acts as a <em>read-only service locator</em> that:</p><ul><li>Resolves UI5 modules by slug (e.g., <code>users</code>, <code>offers</code>)</li><li>Resolves artifacts (e.g., cards, dashboards, actions) by their UI5 namespace</li><li>Supports routing, UI5 tag rendering, and metadata generation</li><li>Enforces system-wide constraints like uniqueness and slug mapping</li></ul><h2 id="artifacts-modules" tabindex="-1">Artifacts &amp; Modules <a class="header-anchor" href="#artifacts-modules" aria-label="Permalink to &quot;Artifacts &amp; Modules&quot;">​</a></h2><p>Each UI5-related PHP class in LaravelUi5 implements either:</p><ul><li><code>Ui5ModuleInterface</code>: Represents a reusable module</li><li><code>Ui5ArtifactInterface</code>: Represents an artifact (e.g. card, tile, dashboard, report, action)</li></ul><p>Artifacts may optionally implement <code>SluggableInterface</code> to allow addressable routing via <code>getSlug()</code>.</p><h2 id="runtime-registry" tabindex="-1">Runtime Registry <a class="header-anchor" href="#runtime-registry" aria-label="Permalink to &quot;Runtime Registry&quot;">​</a></h2><p>The default implementation (<code>Ui5Registry</code>) performs <em>live resolution</em> on each request:</p><ul><li><p>Modules are loaded from <code>config/ui5.php</code> under the <code>modules</code> key</p></li><li><p>Dashboards are loaded from the <code>dashboards</code> key</p></li><li><p>Each module may provide:</p><ul><li>App</li><li>Library</li><li>Cards</li><li>Tiles</li><li>KPIs</li><li>Actions</li><li>Reports</li></ul></li></ul><p>On construction, all artifacts are instantiated and registered into lookup maps by:</p><ul><li>Namespace (e.g., <code>io.pragmatiqu.users.cards.summary</code>)</li><li>Slug (e.g., <code>users</code>) and URL key (e.g., <code>card/users/summary</code>)</li></ul><p>This is ideal for development, but less performant in production.</p><h2 id="cached-registry-production" tabindex="-1">Cached Registry (Production) <a class="header-anchor" href="#cached-registry-production" aria-label="Permalink to &quot;Cached Registry (Production)&quot;">​</a></h2><p>In production environments, use the <code>CachedUi5Registry</code>, which reads from a precompiled file:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bootstrap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cache</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ui5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span></code></pre></div><p>This file is created via:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ui5:cache</span></span></code></pre></div><p>It stores artifact and module mappings. Lazy loading is supported. Classes are resolved using Laravel&#39;s container and instantiated on demand.</p><p>To activate the cached registry, set in <code>config/ui5.php</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;registry&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\LaravelUi5\\Core\\Ui5\\CachedUi5Registry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h2 id="syncing-to-the-database" tabindex="-1">Syncing to the Database <a class="header-anchor" href="#syncing-to-the-database" aria-label="Permalink to &quot;Syncing to the Database&quot;">​</a></h2><p>To store and query artifact metadata in the database (e.g., for dashboards, runtime configuration or permissions), LaravelUi5 provides a migration-based table <code>artifacts</code>.</p><p>Once the migration is run via:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span></code></pre></div><p>You can sync current artifacts using:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ui5:sync</span></span></code></pre></div><p>This command will:</p><ul><li>Read from the active registry implementation</li><li>Create or update <code>Artifact</code> Eloquent records for each namespace</li><li>Store type, version, title, description, and <code>url_key</code></li></ul><p>To force updates even if a record exists:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ui5:sync</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div><h2 id="artisan-commands" tabindex="-1">Artisan Commands <a class="header-anchor" href="#artisan-commands" aria-label="Permalink to &quot;Artisan Commands&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">Command</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ui5:cache</code></td><td style="text-align:left;">Generate a performance-optimized cache file</td></tr><tr><td style="text-align:left;"><code>ui5:sync</code></td><td style="text-align:left;">Sync artifact metadata into the database</td></tr></tbody></table><h2 id="api-overview" tabindex="-1">API Overview <a class="header-anchor" href="#api-overview" aria-label="Permalink to &quot;API Overview&quot;">​</a></h2><p>The <code>Ui5RegistryInterface</code> defines a robust contract for artifact resolution:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $slug)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ui5ModuleInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $namespace)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ui5ArtifactInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fromSlug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $slug)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ui5ArtifactInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> slugFor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ui5ArtifactInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $artifact)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $namespace)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resolveRoots</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $namespaces)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="system-rules-enforced" tabindex="-1">System Rules Enforced <a class="header-anchor" href="#system-rules-enforced" aria-label="Permalink to &quot;System Rules Enforced&quot;">​</a></h2><ul><li>Every module must have a <em>unique slug</em></li><li>Every artifact must have a <em>globally unique namespace</em></li><li>All routing-safe artifacts must implement <code>SluggableInterface</code></li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ul><li>Use <code>Ui5Registry::get()</code> when rendering components by namespace</li><li>Use <code>fromSlug()</code> and <code>slugFor()</code> when working with routes or URLs</li><li>Always run <code>ui5:cache</code> before deployment</li><li>Use <code>ui5:sync</code> to persist artifact metadata for dashboards or admin UIs</li></ul><h2 id="example-use-cases" tabindex="-1">Example Use Cases <a class="header-anchor" href="#example-use-cases" aria-label="Permalink to &quot;Example Use Cases&quot;">​</a></h2><ul><li><em>Resolve module from URL</em>: <code>/ui5/app/users/overview</code> → <code>users</code></li><li><em>Render dynamic tag</em>: <code>&lt;x-ui5-element id=&quot;io.pragmatiqu.users.cards.summary&quot; /&gt;</code></li><li><em>Dispatch backend action</em>: Call <code>Ui5Registry::get(&#39;io.pragmatiqu.users.actions.toggle-lock&#39;)</code></li></ul>`,45)])])}const g=s(n,[["render",l]]);export{k as __pageData,g as default};
