import{_ as i,C as t,c as n,o,j as a,G as h,ag as l,a as p}from"./chunks/framework.C4nOkCZI.js";const C=JSON.parse('{"title":"The Lock Function","description":"","frontmatter":{},"headers":[],"relativePath":"course/video-11.md","filePath":"course/video-11.md"}'),d={name:"course/video-11.md"};function r(c,e,k,g,u,F){const s=t("Youtube");return o(),n("div",null,[e[0]||(e[0]=a("h1",{id:"the-lock-function",tabindex:"-1"},[p("The Lock Function "),a("a",{class:"header-anchor",href:"#the-lock-function","aria-label":'Permalink to "The Lock Function"'},"​")],-1)),e[1]||(e[1]=a("p",null,"In this final UI-focused video, we’ll build a full-stack roundtrip: a “Toggle Lock” action for users. You’ll see how to add a lock icon, wire up a button, scaffold a Ui5Action, and connect everything from UI to backend and back again. One click changes the database and updates the UI instantly — a clean Laravel-native integration that shows the power of the LUX stack.",-1)),h(s,{id:"TBN9ibiZxy4"}),e[2]||(e[2]=l('<h2 id="quick-reference" tabindex="-1">Quick Reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick Reference&quot;">​</a></h2><p>These are the commands and snippets from this video. For the why and the bigger picture, be sure to follow along in the video above.</p><p><strong>1. Scaffold Ui5Action</strong></p><p>In the terminal execute</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> artisan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ui5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ToggleLock</span></span></code></pre></div><p><strong>2. Add <code>locked</code> to users</strong></p><p>In the terminal execute</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add_locked_to_users_table</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --path=ui5/Users/database/migrations</span></span></code></pre></div><p><strong>3. Migrate</strong></p><p>In the terminal execute</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span></code></pre></div><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><p>To get the exact code with all edits in this video applied, run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> episode-11</span></span></code></pre></div>',14))])}const v=i(d,[["render",r]]);export{C as __pageData,v as default};
