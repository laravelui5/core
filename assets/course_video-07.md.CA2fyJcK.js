import{_ as t,C as n,c as r,o,j as a,G as l,ag as h,a as s}from"./chunks/framework.C4nOkCZI.js";const v=JSON.parse('{"title":"Creating the Master View","description":"","frontmatter":{},"headers":[],"relativePath":"course/video-07.md","filePath":"course/video-07.md"}'),p={name:"course/video-07.md"};function d(c,e,k,u,g,b){const i=n("Youtube");return o(),r("div",null,[e[0]||(e[0]=a("h1",{id:"creating-the-master-view",tabindex:"-1"},[s("Creating the Master View "),a("a",{class:"header-anchor",href:"#creating-the-master-view","aria-label":'Permalink to "Creating the Master View"'},"​")],-1)),e[1]||(e[1]=a("p",null,[s("Now let’s make the app come alive. We’ll build a split-screen layout with a "),a("code",null,"sap.m.SplitApp"),s(", bind a "),a("code",null,"List"),s(" to the OData "),a("code",null,"/Users"),s(" endpoint, and render names and emails directly from the backend. No loops, no fetch calls — just declarative XML that UI5 turns into a working user list.")],-1)),l(i,{id:"ELbUG_jiWq4"}),e[2]||(e[2]=h('<h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://sdk.openui5.org/" target="_blank">OpenUi5 SDK</a></li></ul><h2 id="quick-reference" tabindex="-1">Quick Reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick Reference&quot;">​</a></h2><p>From this episode on, the code is only provided as a tagged commit.</p><p>These are the commands from this video. For the why and the bigger picture, be sure to follow along in the video above.</p><p><strong>Seed Users</strong></p><p>In your terminal execute</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> artisan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tinker</span></span></code></pre></div><p>and create the test data with</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User::factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-&gt;create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><p>To get the exact code with all edits in this video applied, run</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> episode-07</span></span></code></pre></div>',13))])}const C=t(p,[["render",d]]);export{v as __pageData,C as default};
